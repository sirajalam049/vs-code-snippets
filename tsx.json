{
    "React Component With Redux Snipper": {
        "prefix": "rcred",
        "body": [
            "import React, { Component } from 'react'",
            "import { createStyles, WithStyles, withStyles } from '@material-ui/core'",
            "import { connect } from 'react-redux'",
            "import { ThunkDispatch } from 'redux-thunk';",
            "import { withRouter, RouteComponentProps } from 'react-router';",
            "",
            "interface IStateProps { }",
            "",
            "interface IDispatchProps { }",
            "",
            "interface IState {}",
            "",
            "interface OwnProps {}",
            "",
            "interface IProps extends WithStyles<typeof STYLES>, IStateProps, IDispatchProps, RouteComponentProps<any>, OwnProps { }",
            "",
            "class ${1:$TM_FILENAME_BASE} extends Component <IProps, IState> {",
            "",
            "\trender() {",
            "\t\tconst { classes } = this.props",
            "\t\treturn (",
            "\t\t\t<div>",
            "",
            "\t\t\t</div>",
            "\t\t)",
            "\t}",
            "}",
            "",
            "const mapStateToProps = (state:${2:TReduxStore}):IStateProps => ({",
            "",
            "})",
            "",
            "const mapDispatchToProps = (dispatch:ThunkDispatch<{}, {}, any>):IDispatchProps => ({",
            "",
            "})",
            "",
            "const STYLES = (theme:${3:typeof MuiTheme}) => createStyles({",
            "",
            "})",
            "",
            "export default withRouter(connect<IStateProps, IDispatchProps, OwnProps, ${2:TReduxStore}>(mapStateToProps, mapDispatchToProps)(withStyles(STYLES)(${1:$TM_FILENAME_BASE})))"
        ]
    },
    "React Component Without Redux": {
        "prefix": "rcc",
        "body": [
            "import React, { Component } from 'react'",
            "import { createStyles, WithStyles, withStyles } from '@material-ui/core'",
            "import { withRouter, RouteComponentProps } from 'react-router';",
            "",
            "interface IProps extends WithStyles<typeof STYLES>, RouteComponentProps<any> { }",
            "",
            "class ${1:$TM_FILENAME_BASE} extends Component<IProps> {",
            "",
            "\trender() {",
            "\t\tconst { classes } = this.props",
            "\t\treturn (",
            "\t\t\t<div>",
            "",
            "\t\t\t</div>",
            "\t\t)",
            "\t}",
            "}",
            "",
            "const STYLES = (theme: ${2: typeof MuiTheme}) => createStyles({",
            "",
            "})",
            "",
            "export default withRouter(withStyles(STYLES)(${1:$TM_FILENAME_BASE}))"
        ]
    },
    "React Function Component without Redux": {
        "prefix": "rfcc",
        "body": [
            "import React, { FC } from 'react'",
            "import { createStyles, Theme, Box } from '@material-ui/core'",
            "import { makeStyles } from '@material-ui/styles';",
            "",
            "export interface ${1:$TM_FILENAME_BASE}Props { }",
            "",
            "const ${1:$TM_FILENAME_BASE}: FC<${1:$TM_FILENAME_BASE}Props> = (props) =>{",
            "\tconst classes = useStyles(); ",
            "\treturn (",
            "\t\t<Box>",
            "\t\t\t",
            "\t\t</Box>",
            "\t)",
            "}",
            "",
            "const useStyles = makeStyles<Theme>((theme) => {",
            "\treturn (createStyles({",
            "",
            "\t}))",
            "})",
            "",
            "export default ${1:$TM_FILENAME_BASE}"
        ]
    },
    "React Native Component Without Redux": {
        "prefix": "rncc",
        "body": [
            "import React, { Component } from 'react'",
            "import { StyleSheet, View } from 'react-native';",
            "",
            "interface OwnProps {}",
            "",
            "interface IProps extends OwnProps { }",
            "",
            "interface IState { }",
            "",
            "class ${1:$TM_FILENAME_BASE} extends Component<IProps, IState> {",
            "",
            "\tconstructor(props: IProps) {",
            "\t\tsuper(props);",
            "\t};",
            "",
            "\trender() {",
            "\t\treturn (",
            "\t\t\t<View>",
            "",
            "\t\t\t</View>",
            "\t\t)",
            "\t}",
            "}",
            "const STYLES = StyleSheet.create({",
            "",
            "});",
            "",
            "export default ${1:$TM_FILENAME_BASE}"
        ]
    },
    "React Native Component With Redux Snipper": {
        "prefix": "rncred",
        "body": [
            "import React, { Component } from 'react'",
            "import { connect } from 'react-redux'",
            "import { StyleSheet, View } from 'react-native';",
            "import { ThunkDispatch } from 'redux-thunk';",
            "",
            "interface IStateProps { }",
            "",
            "interface IDispatchProps { }",
            "",
            "interface IState { }",
            "",
            "interface OwnProps {}",
            "",
            "interface IProps extends IStateProps, IDispatchProps, OwnProps { }",
            "",
            "class ${1:$TM_FILENAME_BASE} extends Component<IProps, IState> {",
            "",
            "\trender() {",
            "\t\treturn (",
            "\t\t\t<View>",
            "",
            "\t\t\t</View>",
            "\t\t)",
            "\t}",
            "}",
            "",
            "const mapStateToProps = (state:${2:TReduxStore}): IStateProps => ({",
            "",
            "})",
            "",
            "const mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>): IDispatchProps => ({",
            "",
            "})",
            "",
            "const STYLES = StyleSheet.create({",
            "",
            "});",
            "",
            "export default connect<IStateProps, IDispatchProps, OwnProps, ${2:TReduxStore} >(mapStateToProps, mapDispatchToProps)(${1:$TM_FILENAME_BASE})"
        ]
    },
    "React Native Function Component": {
        "prefix": "rnfc",
        "body": [
            "import React, { FC } from \"react\";",
            "",
            "export interface ${1:$TM_FILENAME_BASE}Props {",
            "\t",
            "}",
            "",
            "const ${1:$TM_FILENAME_BASE}:FC = (props) => {",
            "\treturn null;",
            "}",
            "export default ${1:$TM_FILENAME_BASE};"
        ]
    }
}
